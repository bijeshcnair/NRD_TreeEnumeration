/*Copyright (c) 2017-2018 vanenburgsoftware.com All Rights Reserved.
 This software is the confidential and proprietary information of vanenburgsoftware.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with vanenburgsoftware.com*/
package com.nrd.services;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Employee generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`Employee`")
public class Employee implements Serializable {

    private String employeeName;
    private Boolean active;
    private List<TreeEnumerations> treeEnumerationses;

    @Id
    @Column(name = "`EmployeeName`", nullable = false, length = 255)
    public String getEmployeeName() {
        return this.employeeName;
    }

    public void setEmployeeName(String employeeName) {
        this.employeeName = employeeName;
    }

    @Column(name = "`Active`", nullable = true)
    public Boolean getActive() {
        return this.active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.REMOVE, mappedBy = "employee")
    public List<TreeEnumerations> getTreeEnumerationses() {
        return this.treeEnumerationses;
    }

    public void setTreeEnumerationses(List<TreeEnumerations> treeEnumerationses) {
        this.treeEnumerationses = treeEnumerationses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Employee)) return false;
        final Employee employee = (Employee) o;
        return Objects.equals(getEmployeeName(), employee.getEmployeeName());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEmployeeName());
    }
}

